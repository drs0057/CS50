sqlite3 <FILE>

SELECT COUNT(*) FROM favorites WHERE language = 'C' AND problem = 'Mario';
(* will select all columns)

SELECT language, COUNT(*) FROM favorites GROUP BY language ORDER BY COUNT(*);

INSERT INTO favorites (language, problem) VALUES('SQL', Fiftyville');
SELECT DISTINCT (language) FROM  favorites;

UPDATE favorites SET language = 'C++' WHERE language = 'C';

DELETE FROM favorites WHERE problem = 'Tideman';



Now using IMDB:
SELECT show_id FROM genres WHERE genre = 'Comedy';
SELECT COUNT(show_id) FROM genres WHERE genre = 'Comedy';

SELECT title FROM shows WHERE id IN (SELECT show_id FROM genres WHERE genre = 'Comedy');

Steve Carell:
SELECT title FROM shows WHERE id IN (SELECT show_id FROM stars WHERE person_id = (SELECT id FROM people WHERE name = 'Steve Carell'));

Using explicit JOIN:
SELECT * FROM shows JOIN genres ON shows.id = genres.show_id WHERE title = 'The Office';

> SELECT title FROM people
...> JOIN stars ON people.id = stars.person_id
...> JOIN shows ON stars.show_id = shows.id
...> WHERE name = 'Steve Carell';

Using implicit JOIN:
SELECT title FROM people, stars, shows
...> WHERE people.id = stars.person_id
...> AND stars.show_id = shows.id
...> AND name = 'Steve Carell';

Finding how to spell a name:
SELECT * FROM people WHERE name LIKE 'Steve C%'; (% impies that there are charcters after C)

Indexing:
CREAT INDEX title_index ON shows (title);